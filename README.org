#+TITLE: STRUM

#+begin_html
<a href="https://travis-ci.org/acksin/strum"><img src="https://travis-ci.org/acksin/strum.svg?branch=master" /></a>
<a href="https://godoc.org/github.com/acksin/strum"><img src="https://godoc.org/github.com/acksin/strum?status.svg" alt="GoDoc"></a>

<pre>
            ,d                                               
            88                                               
,adPPYba, MM88MMM 8b,dPPYba, 88       88 88,dPYba,,adPYba,   
I8[    ""   88    88P'   "Y8 88       88 88P'   "88"    "8a  
 `"Y8ba,    88    88         88       88 88      88      88  
aa    ]8I   88,   88         "8a,   ,a88 88      88      88  
`"YbbdP"'   "Y888 88          `"YbbdP'Y8 88      88      88  
</pre>
#+end_html



* Introduction

STRUM is a Cloud and Container aware diagnostics tool with a Machine
Learning layer that trains on your infrastructure.

* Quick Start

STRUM outputs its data in JSON to the command line. Run the following
command:

#+begin_src sh
sudo strum
#+end_src

To run the tool and view it on [[https://www.acksin.com/console/login?redirectTo=https://www.acksin.com/console/strum][STRUM Cloud]] run the following:

#+begin_src sh
sudo ACKSIN_API_KEY=getitontheconsole strum agent
#+end_src

* Getting Started & Documentation

All documentation is on the [[https://www.acksin.com/strum][STRUM website]].

* Developing STRUM

STRUM's command line portion is primarily written in Go whereas the
Machine Learning is written in Python. We will go over how to code for
each part.

** Primary Dependencies

One of the primary dependencies of STRUM is the [[https://github.com/acksin/procfs][ProcFS Library]] we use.
Any code that needs to read from ProcFS should go there and we will
primarily code there for things. In the future we will have similar
dependencies for SysFS. In addition to that we use the Go libraries
provided by the Cloud providers.

** [[https://github.com/acksin/strum/wiki/AI-Mental-Models][Mental Models]]

Mental models are the various feature columns that we use to train the
AI portion of the code. They can be anything that helps debug a system
that can be done autonomously.

For example, is the CPU spiking? Is the machine swapping? That can be
a mental model.

This data is contained in the [[https://github.com/acksin/strum/tree/master/ai/mental_models][ai/mental_models]] directory.

* License

Copyright (C) 2016 Acksin <hey@acksin.com>

This Source Code Form is subject to the terms of the Mozilla Public
License, v. 2.0. If a copy of the MPL was not distributed with this
file, You can obtain one at http://mozilla.org/MPL/2.0/.

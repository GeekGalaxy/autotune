name: networking
description: Settings for high performance networking

documentation: |
  Many of these settings were from the following places:
    - http://vincent.bernat.im/en/blog/2014-tcp-time-wait-state-linux.html
    - https://rtcamp.com/tutorials/linux/sysctl-conf/
    - https://fasterdata.es.net/host-tuning/linux/
    - http://cherokee-project.com/doc/other_os_tuning.html
    - https://easyengine.io/tutorials/linux/sysctl-conf/
  TODO: These setting are sort of set in stone but I feel that they
  can adapt as the system is being used. We don't have to set them to
  the values but we can migrate and change as we learn more about the
  system and tune it appropriately.

vars:
  nfConntrackMax: 200000

procfs:
  net.ipv4.tcp_fin_timeout:
    value: "15"
    description: |
      tcp_fin_timeout - INTEGER
      Time to hold socket in state FIN-WAIT-2, if it was closed
      by our side. Peer can be broken and never close its side,
      or even died unexpectedly. Default value is 60sec.
      Usual value used in 2.2 was 180 seconds, you may restore
      it, but remember that if your machine is even underloaded WEB server,
      you risk to overflow memory with kilotons of dead sockets,
      FIN-WAIT-2 sockets are less dangerous than FIN-WAIT-1,
      because they eat maximum 1.5K of memory, but they tend
      to live longer. Cf. tcp_max_orphans.
  net.ipv4.ip_local_port_range:
    value: "1024 65535"
    description: |
      On Linux, the client port has a range of about 30,000 ports. This
      means that only 30,000 connections can be established between the
      web server and the load-balancer every minute, so about 500
      connections per second. We can increase the amount of available
      ports.
  net.core.rmem_max:
    value: "16777216"
    description: 16MB per socket.
  net.core.wmem_max:
    value: "16777216"
    description: 16MB per socket.
  net.ipv4.tcp_max_syn_backlog:
    value: "20480"
    description: Increase the number syn requests allowed.
  net.ipv4.tcp_syncookies:
    value: "1"
  net.core.somaxconn:
    value: "16096"
    description: The maximum number of "backlogged sockets"
  net.core.netdev_max_backlog:
    value: "30000"
  net.ipv4.tcp_max_tw_buckets:
    value: "400000"
    description: |
      Maximal number of timewait sockets held by the system
      simultaneously. If this number is exceeded time-wait socket
      is immediately destroyed and a warning is printed. This
      limit exists only to prevent simple DoS attacks, you must
      not lower the limit artificially, but rather increase it
      (probably, after increasing installed memory), if network
      conditions require more than the default value.
  net.ipv4.tcp_no_metrics_save:
    value: "1"
  net.ipv4.tcp_syn_retries:
    value: "2"
  net.ipv4.tcp_synack_retries:
    value: "2"
  net.ipv4.tcp_rmem:
    value: "4096 87380 67108864"
  net.ipv4.tcp_wmem:
    value: "4096 65536 67108864"
  proc.min_free_kbytes:
    value: "65536"
    description: |
      Amount of memory to keep free. Don't want to make this too high
      as Linux will spend more time trying to reclaim memory.
  proc.file-max:
    value: "2097152"
    description: |
      http://serverfault.com/questions/122679/how-do-ulimit-n-and-proc-sys-fs-file-max-differ
      This needs to be higher.
  net.netfilter.nf_conntrack_max:
    value: '{{ index "Vars" "nfConntrackMax" }}'
    description: |
      https://wiki.khnet.info/index.php/Conntrack_tuning
      nf_conntrack. This max should usually double the value of
      the previous number.



sysfs:
  "/sys/module/nf_conntrack/parameters/hashsize":
    value: '{{ index "Vars" "nfConntrackMax" / 4 }}'

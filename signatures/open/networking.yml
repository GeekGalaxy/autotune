name: networking
description: Settings for high performance networking

documentation: |
  TODO: These setting are sort of set in stone but I feel that they
  can adapt as the system is being used. We don't have to set them to
  the values but we can migrate and change as we learn more about the
  system and tune it appropriately.

references:
  - http://vincent.bernat.im/en/blog/2014-tcp-time-wait-state-linux.html
  - https://rtcamp.com/tutorials/linux/sysctl-conf/
  - https://fasterdata.es.net/host-tuning/linux/
  - http://cherokee-project.com/doc/other_os_tuning.html
  - https://easyengine.io/tutorials/linux/sysctl-conf/

vars:
  nfConntrackMax: 200000

procfs:
  net.ipv4.tcp_fin_timeout:
    value: "15"
    description: |
      Usually, the Linux kernel holds a TCP connection even after it
      is closed for around two minutes. This means that there may be a
      port exhaustion as the kernel waits to close the connections. By
      moving the fin_timeout to 15 seconds we drastically reduce the
      length of time the kernel is waiting for the socket to get any
      remaining packets.
  net.ipv4.ip_local_port_range:
    value: "1024 65535"
    description: |
      On a typical machine there are around 28000 ports available to
      be bound to. This number can get exhausted quickly if there are
      many connections. We will increase this.
  net.core.rmem_max:
    value: "16777216"
    description: |
      The size of the receive buffer for all the sockets. 16MB per
      socket.
  net.core.wmem_max:
    value: "16777216"
    description: |
      The size of the buffer for all the sockets. 16MB per socket.
  net.ipv4.tcp_rmem:
    value: "4096 87380 16777216"
    description: |
      (min, default, max): The sizes of the receive buffer for the IP protocol.
  net.ipv4.tcp_wmem:
    value: "4096 65536 16777216"
    description: |
      (min, default, max): The sizes of the write buffer for the IP protocol.
  net.ipv4.tcp_max_syn_backlog:
    value: "20480"
    description: |
      Increase the number syn requests allowed. Sets how many
      half-open connections to backlog queue
  net.ipv4.tcp_syncookies:
    value: "1"
    description: |
      Security to prevent DDoS attacks.

      http://cr.yp.to/syncookies.html
  net.ipv4.tcp_no_metrics_save:
    value: "1"
    description: |
      TCP saves various connection metrics in the route cache when the
      connection closes so that connections established in the near
      future can use these to set initial conditions. Usually, this
      increases overall performance, but may sometimes cause
      performance degradation.
  net.core.somaxconn:
    value: "16096"
    description: |
      The maximum number of queued sockets on a connection.
  net.core.netdev_max_backlog:
    value: "30000"
    description: |
      The number of incoming connections on the backlog queue. The
      maximum number of packets queued on the INPUT side.
  net.ipv4.tcp_max_tw_buckets:
    value: "400000"
    description: |
      Increase the tcp-time-wait buckets pool size to prevent simple
      DOS attacks
  net.ipv4.tcp_syn_retries:
    value: "2"
    description: |
      Number of times initial SYNs for a TCP connection attempt will
      be retransmitted for outgoing connections.
  net.ipv4.tcp_synack_retries:
    value: "2"
    description: |
      This setting determines the number of SYN+ACK packets sent
      before the kernel gives up on the connection
  net.netfilter.nf_conntrack_max:
    value: '{{ index .Vars "nfConntrackMax" }}'
    description: |
      The max is double the previous value.

      https://wiki.khnet.info/index.php/Conntrack_tuning

sysfs:
  "/sys/module/nf_conntrack/parameters/hashsize":
    value: '{{ divide (index .Vars "nfConntrackMax") 4 }}'
